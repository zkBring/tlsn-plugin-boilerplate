{
  "version": 3,
  "sources": ["../src/utils/hf.js", "../src/index.ts", "../config.json"],
  "sourcesContent": ["function redirect(url) {\n  const { redirect } = Host.getFunctions();\n  const mem = Memory.fromString(url);\n  redirect(mem.offset);\n}\n\nfunction notarize(options) {\n  const { notarize } = Host.getFunctions();\n  const mem = Memory.fromString(JSON.stringify(options));\n  const idOffset = notarize(mem.offset);\n  const id = Memory.find(idOffset).readString();\n  return id;\n}\n\nfunction outputJSON(json) {\n  Host.outputString(\n    JSON.stringify(json),\n  );\n}\n\nfunction getCookiesByHost(hostname) {\n  const cookies = JSON.parse(Config.get('cookies'));\n  if (!cookies[hostname]) throw new Error(`cannot find cookies for ${hostname}`);\n  return cookies[hostname];\n}\n\nfunction getHeadersByHost(hostname) {\n  const headers = JSON.parse(Config.get('headers'));\n  if (!headers[hostname]) throw new Error(`cannot find headers for ${hostname}`);\n  return headers[hostname];\n}\n\nmodule.exports = {\n  redirect,\n  notarize,\n  outputJSON,\n  getCookiesByHost,\n  getHeadersByHost,\n};\n", "import icon from '../assets/icon.png';\nimport config_json from '../config.json';\nimport { redirect, notarize, outputJSON, getCookiesByHost, getHeadersByHost } from './utils/hf.js';\n\nexport function config() {\n  outputJSON({\n    ...config_json,\n    icon: icon\n  });\n}\n\n\n/**\n * Implementation of the first (start) plugin step\n*/\nexport function start() {\n  const dashboard_url = 'https://www.fitbit.com/dashboard';\n  if (!(Config.get('tabUrl') == dashboard_url)) {\n    redirect(dashboard_url);\n    outputJSON(false);\n    return;\n  }\n  outputJSON(true);\n}\n\nexport function two() {\n  const cookies = getCookiesByHost('www.fitbit.com');\n  const headers = getHeadersByHost('www.fitbit.com');\n\n  console.log(`Fitbit plugin coockies:`)\n  console.log(JSON.stringify(cookies))\n  // console.log(JSON.stringify(headers))\n\n  if (\n    !cookies.oauth_access_token\n  ) {\n    outputJSON(false);\n    return;\n  }\n\n  outputJSON({\n    url: 'https://web-api.fitbit.com/1/user/4G7WVQ/profile.json',\n    method: 'GET',\n    headers: {\n      authorization: \"Bearer \" + cookies.oauth_access_token,\n      'Accept-Encoding': 'identity',\n      Connection: 'close',\n    },\n    secretHeaders: [\n      `Bearer ${cookies.oauth_access_token}`,\n    ],\n  });\n}\n\nexport function parseResp() {\n  const bodyString = Host.inputString();\n  const params = JSON.parse(bodyString);\n  // console.log(\"params\")\n  // console.log(JSON.stringify(params))\n  // console.log(JSON.stringify(params.user))\n  // console.log(JSON.stringify(params.user.fullName))\n\n  if (params?.user?.fullName) {\n    const revealed = `\"fullName\":\"${params.user.fullName}\"`;\n    const selectionStart = bodyString.indexOf(revealed);\n    const selectionEnd =\n      selectionStart + revealed.length;\n    const secretResps = [\n      bodyString.substring(0, selectionStart),\n      bodyString.substring(selectionEnd, bodyString.length),\n    ];\n    outputJSON(secretResps);\n  } else {\n    outputJSON(false);\n  }\n}\n\nexport function three() {\n  const params = JSON.parse(Host.inputString());\n\n  if (!params) {\n    outputJSON(false);\n  } else {\n    const id = notarize({\n      ...params,\n      getSecretResponse: 'parseResp',\n    });\n    outputJSON(id);\n  }\n}\n", "{\n    \"title\": \"Fitbit Profile\",\n    \"description\": \"Notarize ownership of a fitbit profile\",\n    \"steps\": [\n        {\n            \"title\": \"Open the Fitbit dashboard\",\n            \"description\": \"Login to your account if you haven't already\",\n            \"cta\": \"Go to fitbit.com\",\n            \"action\": \"start\"\n        },\n        {\n            \"title\": \"Check access token\",\n            \"cta\": \"Check access token\",\n            \"action\": \"two\"\n        },\n        {\n            \"title\": \"Notarize fitbit profile\",\n            \"cta\": \"Notarize\",\n            \"action\": \"three\",\n            \"prover\": true\n        }\n    ],\n    \"hostFunctions\": [\n        \"redirect\",\n        \"notarize\"\n    ],\n    \"cookies\": [\n        \"www.fitbit.com\"\n    ],\n    \"headers\": [\n        \"www.fitbit.com\"\n    ],\n    \"requests\": [\n        {\n            \"url\": \"https://web-api.fitbit.com/1/user/*/profile.json\",\n            \"method\": \"GET\"\n        }\n    ]\n}"],
  "mappings": "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",
  "names": ["module", "redirect", "notarize", "outputJSON", "getCookiesByHost", "getHeadersByHost"]
}
