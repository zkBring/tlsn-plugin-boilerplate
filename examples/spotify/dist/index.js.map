{
  "version": 3,
  "sources": ["../src/utils/hf.js", "../src/index.ts", "../config.json"],
  "sourcesContent": ["function redirect(url) {\n  const { redirect } = Host.getFunctions();\n  const mem = Memory.fromString(url);\n  redirect(mem.offset);\n}\n\nfunction notarize(options) {\n  const { notarize } = Host.getFunctions();\n  const mem = Memory.fromString(JSON.stringify(options));\n  const idOffset = notarize(mem.offset);\n  const id = Memory.find(idOffset).readString();\n  return id;\n}\n\nfunction outputJSON(json) {\n  Host.outputString(\n    JSON.stringify(json),\n  );\n}\n\nfunction getCookiesByHost(hostname) {\n  const cookies = JSON.parse(Config.get('cookies'));\n  if (!cookies[hostname]) throw new Error(`cannot find cookies for ${hostname}`);\n  return cookies[hostname];\n}\n\nfunction getHeadersByHost(hostname) {\n  const headers = JSON.parse(Config.get('headers'));\n  if (!headers[hostname]) throw new Error(`cannot find headers for ${hostname}`);\n  return headers[hostname];\n}\n\nmodule.exports = {\n  redirect,\n  notarize,\n  outputJSON,\n  getCookiesByHost,\n  getHeadersByHost,\n};\n", "import icon from '../assets/icon.png';\nimport config_json from '../config.json';\nimport { redirect, notarize, outputJSON, getCookiesByHost, getHeadersByHost } from './utils/hf.js';\n\n/**\n * Plugin configuration\n * This configurations defines the plugin, most importantly:\n *  * the different steps\n *  * the user data (headers, cookies) it will access\n *  * the web requests it will query (or notarize)\n */\nexport function config() {\n  outputJSON({\n    ...config_json,\n    icon: icon\n  });\n}\n\nfunction isValidHost(urlString: string) {\n  const url = new URL(urlString);\n  return url.hostname === 'open.spotify.com';\n}\n\n/**\n * Implementation of the first (start) plugin step\n  */\nexport function start() {\n  if (!isValidHost(Config.get('tabUrl'))) {\n    redirect('https://open.spotify.com');\n    outputJSON(false);\n    return;\n  }\n  outputJSON(true);\n}\n\n/**\n * Implementation of step \"two\".\n * This step collects and validates authentication cookies and headers for 'api.x.com'.\n * If all required information, it creates the request object.\n * Note that the url needs to be specified in the `config` too, otherwise the request will be refused.\n */\nexport function two() {\n  const headers = getHeadersByHost('api.spotify.com');\n\n  if (\n    !headers['authorization']\n  ) {\n    outputJSON(false);\n    return;\n  }\n\n  outputJSON({\n    url: 'https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=1',\n    method: 'GET',\n    headers: {\n      'x-twitter-client-language': 'en',\n      'x-csrf-token': headers['x-csrf-token'],\n      Host: 'api.x.com',\n      authorization: headers.authorization,\n      Connection: 'close',\n    },\n    secretHeaders: [\n      `authorization: ${headers.authorization}`,\n    ],\n  });\n}\n\n/**\n * Step 3: calls the `notarize` host function\n */\nexport function three() {\n  const params = JSON.parse(Host.inputString());\n\n  if (!params) {\n    outputJSON(false);\n  } else {\n    const id = notarize({\n      ...params,\n    });\n    outputJSON(id);\n  }\n}\n", "{\n    \"title\": \"Spotify Top Artist\",\n    \"description\": \"Notarize your favorite artist on Spotify\",\n    \"steps\": [\n        {\n            \"title\": \"Visit Spotify webplayer\",\n            \"cta\": \"Go\",\n            \"action\": \"start\"\n        },\n        {\n            \"title\": \"Collect credentials\",\n            \"description\": \"Login to your account if you haven't already\",\n            \"cta\": \"Go\",\n            \"action\": \"two\"\n        },\n        {\n            \"title\": \"Notarize\",\n            \"cta\": \"Notarize\",\n            \"action\": \"three\",\n            \"prover\": true\n        }\n    ],\n    \"hostFunctions\": [\n        \"redirect\",\n        \"notarize\"\n    ],\n    \"cookies\": [],\n    \"headers\": [\n        \"api.spotify.com\"\n    ],\n    \"requests\": [\n        {\n            \"url\": \"https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=1\",\n            \"method\": \"GET\"\n        }\n    ]\n}"],
  "mappings": "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",
  "names": ["module", "redirect", "notarize", "outputJSON", "getCookiesByHost", "getHeadersByHost"]
}
